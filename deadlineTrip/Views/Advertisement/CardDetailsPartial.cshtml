@model AdsListViewModel
@{
    var endDate = Model.Advertisements.Auction != null ? Model.HasAuctionFinished == false ? Model.Advertisements.Auction.EndDate.ToString() : "" : "";
    var HighestAuctionPrice = Model.Advertisements.Auction != null ?
        Model.Advertisements.Auction.Bets.Count() > 0 ? Model.Advertisements.Auction.Bets.OrderByDescending(x => x.Date).First().Bet
        : Model.Advertisements.Auction.StartingPrice
        : 0;

    var nextBetOffer = HighestAuctionPrice + 0.05;


}
@using System.Security.Claims
@using Microsoft.AspNetCore.Http;
    <div id="sectionForm">
        <div class="row flex-center">

            <!--Card-->
            <div>
                <div hidden id="auctionSuccess" class="alert alert-success" role="alert">
                    The auction has been successfully started
                </div>
                <!--Card image-->
                <div class="view view-cascade">
                    <img style="margin:auto; width:200px; height:250px" src="@Model.Cards.Image" class="card-img-top" />
                </div>
                <!--/.Card image-->
                <!--Card content-->

                <div class="card-body card-body-cascade text-center ">

                    <h4><strong>@Model.Cards.Name</strong></h4>
                    <h4>Retumas: @Model.Cards.Retumas</h4>
                    <p>Level: @Model.Cards.Level</p>
                    <p>Attack: @Model.Cards.Attack</p>
                    <p>Defense: @Model.Cards.Defense</p>
                    @if (!Model.ifInAuction)
                    {
                        <div class="md-form">
                            <label asp-for="Advertisements.Price" class="control-label active disabled"></label>
                            <input asp-for="Advertisements.Price" disabled class="form-control" />
                            <span asp-validation-for="Advertisements.Price" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        if (Model.HasAuctionFinished == false)
                        {
                            <div class="mt-2 alert alert-dark" role="alert">
                                The card is in the auction!
                            </div>
                        }
                        else
                        {
                            <div class="mt-2 alert alert-dark" role="alert">
                                The auction has finished
                            </div>
                        }
                        <div class="md-form">
                            <label class="control-label active disabled">Current Price (Euros)</label>
                            <input value="@HighestAuctionPrice.ToString("F")" disabled class="form-control" />
                        </div>
                        <div class="md-form">
                            <label class="control-label active disabled">End date</label>
                            <input value="@Model.Advertisements.Auction.EndDate.ToString()" disabled class="form-control" />
                        </div>
                        <div class="mt-3">
                            <h4 id="auctionTimer"></h4>
                        </div>
                        <div hidden id="betError" class="alert alert-danger" role="alert">

                        </div>
                        <div hidden id="betSuccess" class="alert alert-success" role="alert">
                            A bet has been made!
                        </div>
                        if (Model.HasAuctionFinished == false)
                        {
                            if (Model.Advertisements.AccountId != @Context.Session.GetString("username"))
                            {
                                <div class="d-flex flex-row bd-highlight">
                                    <div class="bd-highlight mt-2">
                                        <input id="betValue" value="@nextBetOffer.ToString("F")" class="form-control" />
                                    </div>
                                    <div class=" bd-highlight">
                                        <button onclick="placeBet(@Model.Advertisements.Auction.Id, @Model.Advertisements.Id)" type="submit" class="btn btn-warning">Place a bet</button>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>


            </div>

            <!--/.Card-->

        </div>

        <div hidden id="success" class="alert alert-success" role="alert">
            Successfully updated price
        </div>
        <div class="flex-center">
            @if (Model.Advertisements.AccountId == @Context.Session.GetString("username"))
            {
                if (Model.ifInAuction == false)
                {
                    <button onclick="GetMarketPrice(@Model.Cards.Id, @Model.Advertisements.Id)" type="submit" class="btn btn-primary">Calculate market price</button>
                    <button onclick="OpenAuctionForm(@Model.Advertisements.Id)" type="submit" class="btn btn-warning">Start auction</button>
                }
            }
            else
            {
                if (Model.ifInAuction == false)
                {
                    <a class="btn btn-success" href="/ShoppingCart/AddToCart/id?=@Model.Advertisements.Id">Add To Cart</a>
                }
            }
        </div>

        <script>
            if ('@endDate' != '') {
                auctionCountdown()
            }

            function auctionCountdown() {

                let endDate = '@endDate';

                var countDownDate = new Date(endDate).getTime();

                var x = setInterval(function() {

                  var now = new Date().getTime();

                  var distance = countDownDate - now;

                  var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                  var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                  $('#auctionTimer').text(days + "d " + hours + "h "
                                    + minutes + "m " + seconds + "s ")
                  if (distance < 0) {
                    clearInterval(x);
                   $('#auctionTimer').text('00d00h00m00s')
                  }
                }, 1000);
            }      
</script>
